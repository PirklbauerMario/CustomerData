<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionBankBalForb" xml:space="preserve">
    <value>Invalid Bankbalance!</value>
  </data>
  <data name="ExceptionCustNumForb" xml:space="preserve">
    <value>Customer number invalid!</value>
  </data>
  <data name="ExceptionDayForb" xml:space="preserve">
    <value>Invalid Day in LastChange!</value>
  </data>
  <data name="ExceptionDBNotEmpty" xml:space="preserve">
    <value>Database should be empty before importing customers!</value>
  </data>
  <data name="ExceptionFirstNameCapitalLetter" xml:space="preserve">
    <value>The first element of your first name should be a capital letter!</value>
  </data>
  <data name="ExceptionFirstNameEmpty" xml:space="preserve">
    <value>Your first name should have at least one letter!</value>
  </data>
  <data name="ExceptionFirstNameLetters" xml:space="preserve">
    <value>Your first name should only include letters!</value>
  </data>
  <data name="ExceptionHourForb" xml:space="preserve">
    <value>Invalid Hour in LastChange!</value>
  </data>
  <data name="ExceptionInvalPassw" xml:space="preserve">
    <value>File could not be read because of invalid password!</value>
  </data>
  <data name="ExceptionLastNameCapitalLetter" xml:space="preserve">
    <value>The first element of your last name should be a capital letter!</value>
  </data>
  <data name="ExceptionLastNameEmpty" xml:space="preserve">
    <value>Your last name should have at least one letter!</value>
  </data>
  <data name="ExceptionLastNameLetters" xml:space="preserve">
    <value>Your last name should only include letters!</value>
  </data>
  <data name="ExceptionMailDomain" xml:space="preserve">
    <value>Only letters are allowed as domain!</value>
  </data>
  <data name="ExceptionMailExists" xml:space="preserve">
    <value>This mail still exists! Please choose another one.</value>
  </data>
  <data name="ExceptionMailFewSymbBeforeAt" xml:space="preserve">
    <value>Too few symbols before your @ symbol. At least one Symbol is required!</value>
  </data>
  <data name="ExceptionMailForbSymb" xml:space="preserve">
    <value>Mail contains forbidden symbols!</value>
  </data>
  <data name="ExceptionMailMuchSymbAfterAt" xml:space="preserve">
    <value>Too few symbols after your @ symbol!</value>
  </data>
  <data name="ExceptionMailTooManyAt" xml:space="preserve">
    <value>Mail contains too much @-symbols!</value>
  </data>
  <data name="ExceptionMailToShort" xml:space="preserve">
    <value>Your mail is too short or does not exist an @-Symbol!</value>
  </data>
  <data name="ExceptionMinuteForb" xml:space="preserve">
    <value>Invalid Minute in LastChange!</value>
  </data>
  <data name="ExceptionMonthForb" xml:space="preserve">
    <value>Invalid Month in LastChange!</value>
  </data>
  <data name="ExceptionQuickSortForb" xml:space="preserve">
    <value>This SortValue doesn't exist!</value>
  </data>
  <data name="ExceptionSecondForb" xml:space="preserve">
    <value>Invalid Second in LastChange!</value>
  </data>
  <data name="ExceptionToLessPointsAfterAt" xml:space="preserve">
    <value>Mail contains too less . after your @!</value>
  </data>
  <data name="ExceptionUserNotFound" xml:space="preserve">
    <value>User not found!</value>
  </data>
  <data name="ExceptionWrongPassw" xml:space="preserve">
    <value>Password should have at least 1 and max. 16 characters!</value>
  </data>
  <data name="ExceptionYearForb" xml:space="preserve">
    <value>Invalid Year in LastChange!</value>
  </data>
  <data name="ExpcetionMailFrobPoints" xml:space="preserve">
    <value>Mail contains . on forbidden positions. These are not allowed at the start/end and before/after @!</value>
  </data>
  <data name="ExpcetionMailNumSymb" xml:space="preserve">
    <value>Too few/much symbols at the ending. These must be at least 2 and max. 4!</value>
  </data>
  <data name="ExpcetionMailToMuchPointsAfterAt" xml:space="preserve">
    <value>Mail contains too much . after your @!</value>
  </data>
  <data name="FrmEditNumberReq" xml:space="preserve">
    <value>Type in a number!</value>
  </data>
  <data name="FrmWelcomeLabelGroupbox" xml:space="preserve">
    <value>Choose Database</value>
  </data>
  <data name="Frm1LableBtnAdd" xml:space="preserve">
    <value>Add Customer</value>
  </data>
  <data name="FrmWelcomeLabelRdbLoad" xml:space="preserve">
    <value>Load Database</value>
  </data>
  <data name="FrmWelcomeLabelRdbNew" xml:space="preserve">
    <value>New Database</value>
  </data>
  <data name="Frm1DgvLabelHeader1" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Frm1DgvLabelHeader2" xml:space="preserve">
    <value>Forename</value>
  </data>
  <data name="Frm1DgvLabelHeader4" xml:space="preserve">
    <value>Last Change</value>
  </data>
  <data name="Frm1DgvLabelHeader5" xml:space="preserve">
    <value>Bank Balance</value>
  </data>
  <data name="Frm1Label1u4" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Frm1Label2u3" xml:space="preserve">
    <value>Filename</value>
  </data>
  <data name="Frm1LabelBtnEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Frm1LabelBtnLoad" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="Frm1LabelBtnPay" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="Frm1LabelBtnSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Frm1LabelBtnSearch" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Frm1LabelGroupBox2" xml:space="preserve">
    <value>Save Database</value>
  </data>
  <data name="Frm1LabelGroupBox3" xml:space="preserve">
    <value>Search by:</value>
  </data>
  <data name="Frm1LabelGroupBox5" xml:space="preserve">
    <value>Load Database</value>
  </data>
  <data name="Frm1Text" xml:space="preserve">
    <value>Customer Data</value>
  </data>
  <data name="FrmAddLabelGroupBox1" xml:space="preserve">
    <value>Forename</value>
  </data>
  <data name="FrmAddLabelGroupBox2" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="FrmAddText" xml:space="preserve">
    <value>Add Customer</value>
  </data>
  <data name="FrmEditLabelGroupBox1" xml:space="preserve">
    <value>Customer-Number</value>
  </data>
  <data name="FrmEditLabelGroupBox2" xml:space="preserve">
    <value>New-Surname</value>
  </data>
  <data name="FrmEditLabelGroupBox3" xml:space="preserve">
    <value>New-E-Mail</value>
  </data>
  <data name="FrmEditText" xml:space="preserve">
    <value>Edit Customer</value>
  </data>
  <data name="FrmPayLabelGroupBox1" xml:space="preserve">
    <value>Customer-Number</value>
  </data>
  <data name="FrmPayLabelGroupBox2" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="FrmPayLabelRdb1" xml:space="preserve">
    <value>Inpayment</value>
  </data>
  <data name="FrmPayLabelRdb2" xml:space="preserve">
    <value>Outpayment</value>
  </data>
  <data name="FrmPayNoCustomer" xml:space="preserve">
    <value>This Customer-Number is not available!</value>
  </data>
  <data name="FrmPayText" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="FrmWelcomeLabelRdbEnglish" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="FrmWelcomeLabelRdbGerman" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="FrmWelcomeLabel1" xml:space="preserve">
    <value>Paasword</value>
  </data>
  <data name="FrmWelcomeLabel2" xml:space="preserve">
    <value>Filename</value>
  </data>
  <data name="FrmWelcomeLabelGroupbox3" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="FrmWelcomeText" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="MassageBoxSave" xml:space="preserve">
    <value>Successfully stored!</value>
  </data>
  <data name="MassageBoxSearch" xml:space="preserve">
    <value>Sorry, not found!</value>
  </data>
  <data name="TootipTextSearch" xml:space="preserve">
    <value>You are able to search by: Forename, Surname and Customer Number</value>
  </data>
  <data name="ExceptionInvalFileName" xml:space="preserve">
    <value>Your chosen Filename is invalid. Please check it again.</value>
  </data>
  <data name="MassegeBoxLoad" xml:space="preserve">
    <value>Database successfully loaded!</value>
  </data>
</root>